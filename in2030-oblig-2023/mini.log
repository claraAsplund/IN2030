   1: 
Scanner: NEWLINE token on line 1
   2: 
Scanner: NEWLINE token on line 2
   3: # Boblesortering
   4: # (Den enkleste men akk sÃ¥ ineffektive sorteringsmetoden)
   5: 
Scanner: NEWLINE token on line 5
   6: def boblesorter (a):
Scanner: ( token on line 6
Scanner: ) token on line 6
Scanner: : token on line 6
Scanner: NEWLINE token on line 6
   7:     global ombyttinger
Scanner: NEWLINE token on line 7
   8:     while True:
Scanner: : token on line 8
Scanner: NEWLINE token on line 8
   9:         endret = False
Scanner: = token on line 9
Scanner: NEWLINE token on line 9
  10:         for i in range(1,len(a)):
Scanner: ( token on line 10
Scanner: integer literal token on line 10: 1
Scanner: , token on line 10
Scanner: ( token on line 10
Scanner: ) token on line 10
Scanner: ) token on line 10
Scanner: : token on line 10
Scanner: NEWLINE token on line 10
  11:             if a[i-1] > a[i]:
Scanner: [ token on line 11
Scanner: - token on line 11
Scanner: integer literal token on line 11: 1
Scanner: ] token on line 11
Scanner: > token on line 11
Scanner: [ token on line 11
Scanner: ] token on line 11
Scanner: : token on line 11
Scanner: NEWLINE token on line 11
  12:                 t = a[i-1];  a[i-1] = a[i];  a[i] = t
Scanner: = token on line 12
Scanner: [ token on line 12
Scanner: - token on line 12
Scanner: integer literal token on line 12: 1
Scanner: ] token on line 12
Scanner: ; token on line 12
Scanner: [ token on line 12
Scanner: - token on line 12
Scanner: integer literal token on line 12: 1
Scanner: ] token on line 12
Scanner: = token on line 12
Scanner: [ token on line 12
Scanner: ] token on line 12
Scanner: ; token on line 12
Scanner: [ token on line 12
Scanner: ] token on line 12
Scanner: = token on line 12
Scanner: NEWLINE token on line 12
  13:                 ombyttinger = ombyttinger + 1
Scanner: = token on line 13
Scanner: + token on line 13
Scanner: integer literal token on line 13: 1
Scanner: NEWLINE token on line 13
  14:                 endret = True
Scanner: = token on line 14
Scanner: NEWLINE token on line 14
  15:         if not endret: return 0
Scanner: : token on line 15
Scanner: integer literal token on line 15: 0
Scanner: NEWLINE token on line 15
  16: 
Scanner: NEWLINE token on line 16
  17: data = [ 3, 17, -3, 0, 3, 1, 12 ]
Scanner: = token on line 17
Scanner: [ token on line 17
Scanner: integer literal token on line 17: 3
Scanner: , token on line 17
Scanner: integer literal token on line 17: 1
Scanner: integer literal token on line 17: 7
Scanner: , token on line 17
Scanner: - token on line 17
Scanner: integer literal token on line 17: 3
Scanner: , token on line 17
Scanner: integer literal token on line 17: 0
Scanner: , token on line 17
Scanner: integer literal token on line 17: 3
Scanner: , token on line 17
Scanner: integer literal token on line 17: 1
Scanner: , token on line 17
Scanner: integer literal token on line 17: 1
Scanner: integer literal token on line 17: 2
Scanner: ] token on line 17
Scanner: NEWLINE token on line 17
  18: ombyttinger = 0
Scanner: = token on line 18
Scanner: integer literal token on line 18: 0
Scanner: NEWLINE token on line 18
  19: boblesorter(data)
Scanner: ( token on line 19
Scanner: ) token on line 19
Scanner: NEWLINE token on line 19
  20: print("Resultatet etter", ombyttinger, "ombyttinger er", data)
Scanner: ( token on line 20
Scanner: , token on line 20
Scanner: , token on line 20
Scanner: , token on line 20
Scanner: ) token on line 20
Scanner: NEWLINE token on line 20
